/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.37).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ApprovingAuthorityRegistrationApplication;
import io.swagger.model.Ministry;
import io.swagger.resources.ApprovingAuthorityRegistrationApplicationResource;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-04-04T12:17:29.581Z[GMT]")
@Validated
@CrossOrigin
public interface ApprovingAuthorityRegistrationApplicationApi {

    @Operation(summary = "To create a new Approving Authority Registration Application", description = "To create a new Approving Authority Registration Application", tags = {"ApprovingAuthorityRegistrationApplication" })
    @ApiResponses(value = {
        @ApiResponse(responseCode = "200", description = "Successful operation"),
        @ApiResponse(responseCode = "400", description = "Invalid data supplied"),
        @ApiResponse(responseCode = "405", description = "Validation exception", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ApprovingAuthorityRegistrationApplicationResource.class)))) })
    @RequestMapping(value = "/approvingauthority-reg-applications",
    consumes = {"application/json"},
    produces = {"application/json"},
        method = RequestMethod.POST)
    ResponseEntity<ApprovingAuthorityRegistrationApplicationResource> create(HttpServletRequest request,
        @Parameter(in = ParameterIn.DEFAULT, description = "To create a new Approving Authority Registration Application", required = true, schema = @Schema()) @Valid @RequestBody ApprovingAuthorityRegistrationApplicationResource approvingAuthorityRegistrationApplicationResource) throws Exception;
  

    @Operation(summary = "Get Approving Authoity User Registration Application List", description = "Get Approving Authoity User Registration Application List", tags={ "ApprovingAuthorityRegistrationApplication" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ApprovingAuthorityRegistrationApplication.class)))),
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/approvingauthority-reg-applications",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ApprovingAuthorityRegistrationApplicationResource>> list();
    
    
    @Operation(summary = "Get Approving Authoity User Registration Application", description = "Get Approving Authoity User Registration Application by Using Id", tags={ "ApprovingAuthorityRegistrationApplication" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ApprovingAuthorityRegistrationApplication.class)))),
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/approvingauthority-reg-application/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ApprovingAuthorityRegistrationApplicationResource> get(@NotNull @Parameter(in = ParameterIn.PATH, description = "code of the ministry" 
    ,required=true,schema=@Schema()) @Valid @PathVariable(value = "id", required = true) String id);
}












// /**
//  * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
//  * https://github.com/swagger-api/swagger-codegen
//  * Do not edit the class manually.
//  */
// package io.swagger.api;

// import java.util.List;

// import javax.servlet.http.HttpServletRequest;
// import javax.validation.Valid;

// import org.springframework.http.ResponseEntity;
// import org.springframework.stereotype.Service;
// import org.springframework.validation.annotation.Validated;
// import org.springframework.web.bind.annotation.CrossOrigin;
// import org.springframework.web.bind.annotation.PathVariable;
// import org.springframework.web.bind.annotation.RequestBody;
// import org.springframework.web.bind.annotation.RequestMapping;
// import org.springframework.web.bind.annotation.RequestMethod;
// import io.swagger.model.CGHSInchargeApplication;
// import io.swagger.model.OnboardingValidationError;
// import io.swagger.resources.ApprovingAuthorityRegistrationApplicationResource;
// import io.swagger.resources.CGHSInchargeRegistrationResource;
// import io.swagger.v3.oas.annotations.Operation;
// import io.swagger.v3.oas.annotations.Parameter;
// import io.swagger.v3.oas.annotations.enums.ParameterIn;
// import io.swagger.v3.oas.annotations.media.ArraySchema;
// import io.swagger.v3.oas.annotations.media.Content;
// import io.swagger.v3.oas.annotations.media.Schema;
// import io.swagger.v3.oas.annotations.responses.ApiResponse;
// import io.swagger.v3.oas.annotations.responses.ApiResponses;

// @javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-04-04T12:17:29.581Z[GMT]")
// @Validated
// @CrossOrigin
// public interface ApprovingAuthorityRegistrationApplicationApi {

//   @Operation(summary = "To create a new Approving Authority Registration Application", description = "To create a new Approving Authority Registration Application", tags = {
//       "ApprovingAuthorityRegistrationApplication" })
//   @ApiResponses(value = {
//       @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ApprovingAuthorityRegistrationApplicationResource.class))),
//       @ApiResponse(responseCode = "400", description = "Invalid data supplied"),
//       @ApiResponse(responseCode = "405", description = "Validation exception", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OnboardingValidationError.class)))) })
//   @RequestMapping(value = "/approvingauthority-reg-applications", produces = { "application/json",
//       "application/xml" }, consumes = { "application/json", "application/xml",
//           "application/x-www-form-urlencoded" }, method = RequestMethod.POST)
//   ResponseEntity<ApprovingAuthorityRegistrationApplicationResource> create(HttpServletRequest request,
//       @Parameter(in = ParameterIn.DEFAULT, description = "To create a new Approving Authority Registration Application", required = true, schema = @Schema()) @Valid @RequestBody ApprovingAuthorityRegistrationApplicationResource approvingAuthorityRegistrationApplicationResource) throws Exception;

// //   @Operation(summary = "To get the CGHS Incharge Registration", description = "To get the CGHS Incharge Registration", tags = {
// //       "CGHSInchargeRegistration" })
// //   @ApiResponses(value = {
// //       @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = CGHSInchargeApplication.class))),
// //       @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
// //   @RequestMapping(value = "/CGHSInchargeApplication/{id}", method = RequestMethod.GET)
// //   ResponseEntity<CGHSInchargeRegistrationResource> get(@PathVariable(value = "id") long id);

// //   @Operation(summary = "Get the CGHS Incharge Registration", description = "Get the cghsUserRegistration  list ", tags = {
// //       "CGHSInchargeRegistration" })
// //   @ApiResponses(value = {
// //       @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = CGHSInchargeApplication.class))),

// //       @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
// //   @RequestMapping(value = "/cghsinchargeapplications", method = RequestMethod.GET)
// //   ResponseEntity<List<CGHSInchargeRegistrationResource>> list();

// }
