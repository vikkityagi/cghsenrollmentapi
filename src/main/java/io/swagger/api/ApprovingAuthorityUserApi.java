/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;


 
import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.model.ApprovingAuthorityUser;
import io.swagger.model.ApprovingOfficer;
import io.swagger.model.OnboardingApplication;
import io.swagger.resources.ApprovingAuthorityUserResource;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-01-18T12:17:29.581Z[GMT]")
@Validated
@Service

public interface ApprovingAuthorityUserApi {

	@Operation(summary = "Get the Approving Authority Users", description = "Get the approving  list and specific approving authority user", tags={ "ApprovingAuthorityUser" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ApprovingAuthorityUser.class))),
        
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/ApprovingAuthorityUsers",
        method = RequestMethod.GET)
    ResponseEntity<List<ApprovingAuthorityUserResource>> getApprovingAuthorityUsers
    (@RequestParam(value="organizationId", required=false) String organizationId);
	
	@Operation(summary = "Get the Approving Authority User", description = "Get  Approving Authority User", tags={ "ApprovingAuthorityUser" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ApprovingAuthorityUser.class))),
        
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/ApprovingAuthorityUser/{id}",
        method = RequestMethod.GET)
    ResponseEntity<ApprovingAuthorityUserResource> getApprovingAuthorityUser
    (@Parameter(in = ParameterIn.PATH, description = "Get approving authority user", required=true, schema=@Schema()) @PathVariable("id") Long id);
    
}

