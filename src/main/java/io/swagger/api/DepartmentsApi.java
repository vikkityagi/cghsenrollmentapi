/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.37).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Department;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-01-20T10:29:16.504Z[GMT]")
@Validated
public interface DepartmentsApi {

    @Operation(summary = "Get Ministry", description = "Get Ministry using Ministry Id", tags={ "department" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Department.class)))),
        
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/departments",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Department>> departmentsGet(@NotNull @Parameter(in = ParameterIn.QUERY, description = "Id of the Ministry" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "ministryId", required = true) String ministryId);

    
    @Operation(summary = "Get Department", description = "Get Department by using code", tags={ "department" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful operation", content = @Content(mediaType = "application/json",array = @ArraySchema(schema = @Schema(implementation = Department.class)))),
        
        @ApiResponse(responseCode = "400", description = "Invalid data supplied") })
    @RequestMapping(value = "/departments/{deparmentcode}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Department> getDeparmentById(@NotNull @Parameter(in = ParameterIn.PATH, description = "Code of the Department" ,required=true,schema=@Schema()) @Valid @PathVariable(value = "deparmentcode", required = true) String deparmentcode);

}

